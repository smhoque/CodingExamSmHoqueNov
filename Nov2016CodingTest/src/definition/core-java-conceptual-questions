Please answer the below core-java Questions:

What jdk contains or composed of and define each components?

Ans: The java development kit(JDK) contains a private Java Virtual Mechine(JVM) and few other composed of resource of:
appletviewer: Which can be used to run and debug applets without a web browser.
apt: The annotation processing tool.
extcheck: Utility that detects JAR file conflicts.
idlj: The IDL-to-java compiler. This utiity generates java binding from a given java IDL file.
jadswitch - The java access bridge. Exposes assistive technoogy on MIcrosoft windows systems.
java: THe loader for java application. This tools is an interpreter and can interpret the class files generaed by the javac compiler.
javac: The java compiler, which converts source code into java bytecode.
javadoc: The documentation generator, which automatically generates documentation from source code comments.
jar: The archiver, which packages related class libraries into a single JAR file.
javafxpackager: Tool to package and sign javaFX applications.
jarsigner: The jar signing andn verification tools.
javah: The C header and stib generator. used to write native methods.
javap: The class file disassembler.
javaws: The java web start launcher for JNLP application.
jConsole: Java monitoring and management console.
jdb: The debugger.
jhat: Java Heap Analysis Tool(experimental).
jiinfo: This utility gets configuration information from a running java process or crash dump.(experimental)
jmap Oracle jmap - Memory Map– This utility outputs the memory map for Java and can print shared object memory maps or heap memory details of a given process or core dump. (experimental)
jmc – Java Mission Control
jps – Java Virtual Machine Process Status Tool lists the instrumented HotSpot Java Virtual Machines (JVMs) on the target system. (experimental)
jrunscript – Java command-line script shell.
jstack – utility that prints Java stack traces of Java threads. (experimental)
jstat – Java Virtual Machine statistics monitoring tool. (experimental)
jstatd – jstat daemon (experimental)
keytool – tool for manipulating the keystore.
pack200 – JAR compression tool.
policytool – the policy creation and management tool, which can determine policy for a Java runtime, specifying which permissions are available for code from various sources.
VisualVM – visual tool integrating several command-line JDK tools and lightweight[clarification needed] performance and memory profiling capabilities.
wsimport – generates portable JAX-WS artifacts for invoking a web service.
xjc – Part of the Java API for XML Binding (JAXB) API. It accepts an XML schema and generates Java classes.
Experimental tools may not be available in future versions of the JDK.
The JDK also comes with a complete Java Runtime Environment, usually called a private runtime, due to the fact that it is separated from the "regular" JRE and has extra
contents. It consists of a Java Virtual Machine and all of the class libraries present in the production environment, as well as additional libraries only useful to
developers, such as the internationalization libraries and the IDL libraries.

What is IDE?
Ans: An Integrated Development Environment(IDE) is an application that facilates application development. In general, an IDE is a
graphical user interface(GUI)-based workbench designed to aid a developer in building software application with an integrated environment
combined with all the required tools at hand.
Most common features, such as debugging, version control and data structure browsing, help a developer quickly execute actions without
switching to other application. An IDE supports single or multiple languages.

What are the IDEs available in the market to support java?
Ands: Intellij, Exlipse, NetBeans, Jdeveloper, Dr. Java, BlueJ, JCreator, JGrasp, Greenfoot, Condenvy.

Explain the entire java life cycle.
Ans: Every program will have a file name. That file name need to extention of .java. To compile the java  code we havee some command or process
called javac or java Compiler. Java compiler compiles the java code and generates the (.class) file which contains byte code instruction.Next step is to load .class into Java virtual machine(JVM).
JVM Architecture:
1) Class loader subsystem: The  class loader sub system will allocate memory for the (.Class file).
(.class) ===> byte code instructions. It also checks whether the byte code instructions are proper or not . If the byte code instructions are not proper then the class loader subsystem will stops the
process for the executions. If the byte code instructions are proper then it will allow the code for the execution. If the byte code instructions are proper  then the class loader subsystem will
divide the memory in to 5 areas:
1)Method Area: This method area will allocate memory for the variables and methods
2)Heap Area: This memory block will allocate memory for the objects.
3) Java Stacks: It will allocate memory for the results of an method.
4)PC Registers:
Program Counter Registers: it will allocate a thread to a method . If we define n number of methods then the PC registers will allocate n number of threads.
Threads: Executing group of statements to complete a task or it is a process.
5)Native stacks:
Interpreter and JIT Compiler-
Interpreter: Which will converts the byte code instructions in to the machine language so that the processor of our machine will understand and generate the result on our screens.
JIT: Just in time compiler
To speed the execution of the java code or to make execution very firstly they attaches the JIT compiler to the interpreter.

what is class?
Ans: A class is simply a represent of a type of object. It is a blueprint, or plan or template that describes the details of an object. Class composes of three things: a name, attributes and operation.
A class in java can contain: data member, method, constructor, block, class and interface

What is object?
Ans:Instance of class. An entity that has state and behavior is knows as an object. Example : chair, bike, pen, table, car etc. It can be physical or logical(tangible and intangible). The example of intangible object is banking system.

What is the entry point of an application?
Ans: Main Method

Why main is static?
Ans: Static method is belong to class not to object, since the main method is static JVM can call it without creating any instance of a class which contains the main method.If main method
were not declared static than JVM has to create instance of main Class and since constructor can be overloaded and can have arguments there would not be any certain and consistent way for
JVM to find main method in Java.Anything which is declared in class in Java comes under reference type and requires object to be created before using them but static method and static data
are loaded into separate memory inside JVM called context which is created when a class is loaded. If main method is static than it will be loaded in JVM context and are available to
execution.

What is the difference between an Interface and Abstract class?
Abstract classes usually represent an abstract concept or an entity with partial or no implementation. On the other hand, an interface is an abstract type that is used to specify a contract that should be implemented by classes.
Abstract classes should be inherited (or extended), while interfaces should be implemented. Abstract classes may contain abstract anod non abstract methods, whereas an interface should only contain abstract methods. Abstract classes can contain any variables,
but Interfaces can only define constants. A class cannot inherit from more than one abstract class but can implement multiple interfaces. An Interface cannot implement another interface. However an interface can extend a class.
Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
No,we need to create class and then extends abstract class and implement interface. By concreat class we create object for interface and abstract class.

what is Access Specifier?
Access specifier means how we access class, variable and method. Access specifier are Public, private, Protected and default.

What is OOP ? Define each feature of java OOP.
Object oriented programming language which deals with class and object. OOP features are:
Abstraction:Abstraction in Java or Object oriented programming is a way to segregate implementation from an interface and one of the five fundamentals along with Encapsulation, Inheritance, Polymorphism, Class, and Object.
Abstraction in Java is achieved by  using interface and abstract class in Java. An interface or abstract class is something which is not concrete , something which is incomplete. In order to use interface or abstract class,
we need to extend and implement an abstract method with concrete behavior.Abstraction is creating interface to denote common behavior without specifying any details about how that behavior works.
Inheritance: Property transfer from one class to another class means subclass class behaviour inherit from super class.A subclass does not inherit the private members of its parent class. However, if the superclass has public or
protected methods for accessing its private fields, these can also be used by the subclass.A nested class has access to all the private members of its enclosing class—both fields and methods. Therefore, a public or protected nested
class inherited by a subclass has indirect access to all of the private members of the superclass.
Encapsulation:Data hiding and data binding is know encapsulation. A class is example of encapsulation. If we define private variable into class we cannot access it without public method, for that reason encapsulation is concept of
information hiding.
Polymorposism:Polymorphism is the ability of an object to take on many forms. The most common use of polymorphism in OOP occurs when a parent class reference is used to refer to a child class object. Any Java object that can pass
more than one IS-A test is considered to be polymorphic. In Java, all Java objects are polymorphic since any object will pass the IS-A test for their own type and for the class Object.

What is API? Name list of API that you have used so far.
Application Programming Interface. Arrays, ArrayList, BufferedReader, BufferedWriter, Collections, DataInputStream, Date, FileReader, HashMap, Hashset, Exception.

Does java support multiple inheritance?
No, for that rerason we use Interface to support multiple inheritance.

What is method overloading and when it happens?
Defining multiple method with same name but method signature are different is method overloading. It happens at  compile time.

What is method overriding and when it happens?
A method  exist at the parent class same name same method signature but ligic is different is method overriding. It happens at run time.

Explain exceptions in java and how to handle it.
Undesirable situation could be happened or problem could be arrise at the time of program execution. A checked exception that occurs at the compile time and An unchecked exception that occurs at the time of execution. These are also called
as Runtime Exceptions.We handle it by try-catch block.

What is static keyword in java? How it has been used in variables and methods ?
Static is a keyword in java and we can’t create a class or package name as static. static keyword is used to create a Class level variable in java. static variables and methods are part of the class, not the instances of the class.
static variable which belongs to the class and not to object(instance)
Static variables are initialized only once , at the start of the execution . These variables will be initialized first, before the initialization of any instance variables
A single copy to be shared by all instances of the class.
A static variable can be accessed directly by the class name and doesn’t need any object.
It is a method which belongs to the class and not to the object(instance)
A static method can access only static data. It can not access non-static data (instance variables)
A static method can call only other static methods and can not call a non-static method from it.
A static method can be accessed directly by the class name and doesn’t need any object.
A static method cannot refer to “this” or “super” keywords in anyway.


What is final and how it has been used variables and methods?
Final is a keyword.Final is used to apply restrictions on class, method and variable. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.

What is final, finally and finalize?
Final is a keyword.Final is used to apply restrictions on class, method and variable. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
Finally is a block.Finally is used to place important code, it will be executed whether exception is handled or not. It ‘s execute important code such as closing connection, stream etc.
Finalize is a method.Finalize is used to perform clean up processing just before object is garbage collected.


What is a constructor ?
Constructor in java is a special type of method (look like a method but it is not a method) that is used to initialize the object or class property.
Java constructor is invoked at the time of object creation. It constructs the values i.e. provides data for the object that is why it is known as constructor.
There are basically two rules defined for the constructor.
Constructor name must be same as its class name
Constructor must have no explicit return type
There are two types of constructors:
Default constructor (no-arg constructor) Constructor is mandatory but If we do not provide any constructor then compiler will provide default constructor.
Parameterized constructor

What is "this" keyword in java ?
This keyword is a reference variable that refers to the current object and current class instance variable.this() can be used to invoke current class constructor.
It can be used to invoke current class method (implicitly).this can be passed as an argument in the method call.this can be passed as argument in the constructor call.
this keyword can also be used to return the current class instance.

What is "super" keyword in java?
The super keyword in java is a reference variable that is used to refer immediate parent class object.Whenever we create the instance of subclass, an instance of parent class is created implicitly i.e. referred by super reference variable.
super is used to refer immediate parent class instance variable.super() is used to invoke immediate parent class constructor.super is used to invoke immediate parent class method.

What is JVM stand for ?
Java Virtual Machine

What version of java are you using?
Java Version 1.8.0_25 from Oracle Corporation

What is JAR stand for ?
JAR stands for "Java ARchive"

What is compile time and run time?
When source code compiled into machine code in order to become and executable program. This compilation process is referred to as compile time.
A compiled program can be opened and run by a user. When an application is running, it is called runtime.
The terms "runtime" and "compile time" are often used by programmers to refer to different types of errors. A compile time error is a problem such as a syntax error or missing file reference
that prevents the program from successfully compiling. The compiler produces compile time errors and usually indicates what line of the source code is causing the problem.
If a program's source code has already been compiled into an executable program, it may still have bugs that occur while the program is running. Examples include features that don't work, unexpected program behavior, or
program crashes. These types of problems are called runtime errors since they occur at runtime.

What is heap?
The heap is a region of your computer's memory that is not managed automatically, and is not as tightly managed by the CPU. It is a more free-floating region of memory (and is larger).
To allocate memory on the heap, we must use malloc() or calloc(), which are built-in C functions. Once we have allocated memory on the heap, we are responsible for using free() to deallocate that memory once we don't need it any more. If we fail to do this,
our program will have what is known as a memory leak. That is, memory on the heap will still be set aside (and won't be available to other processes). As we will see in the debugging section, there is a tool called valgrind that can help we detect memory leaks.

How java manage it's memory?
Java maintains a stack to store all object references whichever are being in use by program. Objects actually stores in memory heap and their references are maintained on memory stack.
As soon as we create an object in program, its information is being saved to memory with some fixed byte pattern. Now we can use the start of memory location as reference id for this object.
In program, there are various kind of scopes defined by Java. These are like code block scope, method level scope, class level scope, package scope and whole program level scope etc.
These scopes generally has parent <> child <> sibling relations with each other. Now as soon as the program scope initialize, a corresponding scope data storage structure (data structure to save the
scope variable and other data which will have the memory references of the actual objects in memory) can be made and pushed to memory stack. Similarly other scope structures can be made as soon as they
come in existence and can be stored with their parent scope. These scope data structures remain on stack till the corresponding scope is active in program. As soon as, it gets deactivated; the corresponding
data structure will be removed from stack. Take it like as program thread enters into a method, we create a scope data structure for method scope and push it to stack with its parent scope which should be class scope.
Now as program thread leaves the method, we remove the corresponding scope data from the stack. Scope can interact with each other as per the language protocol because they have parent <> child relationship.
This is a simplified version of memory stack with JVM. Now we can visualize scope data structures used to be created or destroyed with the activation or deactivation of corresponding program scope.

What is the difference between String, StringBuffer and StringBuilder?
String: String is immutable(once created can not be changed )object. The object created as a String is stored in the  Constant String Pool .
Every immutable object in Java is thread safe ,that implies String is also thread safe . String can not be used by two threads simultaneously.
String  once assigned can not be changed.
String  demo = " hello " ;
// The above object is stored in constant string pool and its value can not be modified.
demo="Bye" ; //new "Bye" string is created in constant pool and referenced by the demo variable
// "hello" string still exists in string constant pool and its value is not overrided but we lost reference to the "hello"string.

StringBuffer: StringBuffer is mutable means one can change the value of the object . The object created through StringBuffer is stored in the heap.StringBuffer has the same methods as the StringBuilder , but each method in StringBuffer is synchronized that is StringBuffer is thread safe .
Due to this it does not allow two threads to simultaneously access the same method . Each method can be accessed by one thread at a time .
But being thread safe has disadvantages too as the performance of the StringBuffer hits due to thread safe property. Thus  StringBuilder is faster than the StringBuffer when calling the same methods of each class.

StringBuffer value can be changed , it means it can be assigned to the new value . Nowadays its a most common interview question ,the differences between the above classes .
String Buffer can be converted to the string by using
toString() method.
StringBuffer demo1 = new StringBuffer("Hello") ;
// The above object stored in heap and its value can be changed .
demo1=new StringBuffer("Bye");
// Above statement is right as it modifies the value which is allowed in the StringBuffer

StringBuilder:StringBuilder is same as the StringBuffer , that is it stores the object in heap and it can also be modified . The main difference between the StringBuffer and StringBuilder is that StringBuilder is also not thread safe.
StringBuilder is fast as it is not thread safe .
StringBuilder demo2= new StringBuilder("Hello");
// The above object too is stored in the heap and its value can be modified
demo2=new StringBuilder("Bye");
// Above statement is right as it modifies the value which is allowed in the StringBuilder



=======
<<<<<<< HEAD
Java Development Kit (JDK) is a bundle of software components that is used to develop Java based applications.
JDK includes the JRE, set of API classes, Java compiler, Webstart and additional files needed to write Java applets and applications.

=======
Ans: hi there
>>>>>>> 5e2970f252189a15cc07ff735a4da9540095e530
What is IDE?
Integrated Development Environment. A software suite that consolidates the basic tools developers need to write and test software.

What are the IDEs available in the market to support java?
Eclipse, Intellij (what I am using now), Netbeans

Explain the entire java life cycle.
A Java program is written using either a Text Editor like Textpad or an IDE like Eclipse and is saved as a .java file. (Program.java)
The .java file is then compiled using Java compiler and a .class file is obtained from it. (Program.class)
The .class file is now portable and can be used to run this Java program in any platform.
Class file (Program.class) is interpreted by the JVM installed on a particular platform. JVM is part of the JRE software.

what is class?
A class is nothing but a blueprint or a template for creating different objects which defines its properties and behaviors.
Java class objects exhibit the properties and behaviors defined by its class. A class can contain fields and methods to describe
the behavior of an object.

What is object?
Object − Objects have states and behaviors. Example: A dog has states - color, name, breed as well as behaviors –
wagging the tail, barking, eating. An object is an instance of a class. Class − A class can be defined as a template/blueprint
that describes the behavior/state that the object of its type support.

What is the entry point of an application?
Main method (public static void main)

Why main is static?
This is neccesary because main() is called by the JVM before any objects are made. Since it is static it can be directly
invoked via the class. Similarly, we use static sometime for user defined methods so that we need not to make objects.
void indicates that the main() method being declared does not return a value.

What is the difference between an Interface and Abstract class?
In interface no methods are implemented. In abstract class, some methods are implemented and others are not.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
No, you have to create another class that extends or implements the interface or abstract class. After you have defined
all of the methods, you are able to make an instance of that class.

what is Access Specifier?
Public, private, protected.

What is OOP ? Define each feature of java OOP.
Object oriented programming. Programming where you create instances of classes and then use their methods and variables
to write computer code.
The basic unit of OOP is a class, which encapsulates both the static properties and dynamic operations within a "box",
and specifies the public interface for using these boxes. Since classes are well-encapsulated, it is easier to reuse
these classes. In other words, OOP combines the data structures and algorithms of a software entity inside the same box.

What is API? Name list of API that you have used so far.
In computer programming, an application programming interface (API) is a set of subroutine definitions, protocols,
and tools for building application software. A good API makes it easier to develop a computer program by providing
all the building blocks, which are then put together by the programmer.

Does java support multiple inheritance?
Never. You can only inherit one class in Java, unlike in C++ where you can inherit multiple classes.

What is method overloading and when it happens?
When you have more than one method with different signatures. The Java Compiler knows which method to call based on what
variables are passed to it.

What is method overriding and when it happens?
When a class inherits another class, it can use the method of that other class. However, if you want to make your own
method instead of use the one that was inherited, you have that option, and simply write your own. This is called
overriding the previous method.

Explain exceptions in java and how to handle it.
Sometimes a class in Java throws an exception, and you have to catch the exception in your code by using the Try Catch
syntax.

What is static keyword in java? How it has been used in variables and methods ?
The static keyword in Java means that the variable or function is shared between all instances of that class as it
belongs to the type, not the actual objects themselves. So if you have a variable: private static int i = 0; and you
increment it ( i++ ) in one instance, the change will be reflected in all instances.

What is final and how it has been used variables and methods?
Once a final variable has been assigned, it always contains the same value. If a final variable holds a reference to
an object, then the state of the object may be changed by operations on the object, but the variable will always refer
 to the same object.

What is final, finally and finalize?
Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
Finally is used to place important code, it will be executed whether exception is handled or not. Finalize is
used to perform clean up processing just before object is garbage collected.

What is a constructor ?
It initializes the instance.

What is "this" keyword in java ?
Refers to the local variable of the class.

What is "super" keyword in java?
When you want to refer to the class that the current class inherited from.

What is JVM stand for ?
A Java virtual machine (JVM) is an abstract computing machine that enables a computer to run a Java program.
There are three notions of the JVM: specification, implementation, and instance. The specification is a document
that formally describes what is required of a JVM implementation.

What version of java are you using?
Java 8

What is JAR stand for ?
A JAR (Java Archive) is a package file format typically used to aggregate many Java class files and associated metadata
and resources (text, images, etc.) into one file to distribute application software or libraries on the Java platform.

What is compile time and run time?
The source code must be compiled into machine code in order to become and executable program. This compilation process
is referred to as compile time. A compiled program can be opened and run by a user. When an application is running,
it is called runtime.

What is heap?
The heap is the runtime data area from which memory for all class instances and arrays is allocated.
The heap is created on virtual machine start-up. Heap storage for objects is reclaimed by an automatic storage
management system (known as a garbage collector); objects are never explicitly deallocated.

How java manage it's memory?
Java has a 'trash collector' that deletes variables that are no longer being used by the program.

What is the difference between String, StringBuffer and StringBuilder?
A String is the most basic of the 3. StringBuffer allows you to manipulate the string using method calls.
StringBuilder allows you to build a string that you know you are going to continue adding more data to.
>>>>>>> b366a40d7778f36bd139ad5ed521bd9e39d5b4d7
